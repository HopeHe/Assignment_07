{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Introduction to Choropleth Maps\"\nauthor: \"Steve Buyske\"\ndate: \"10/23/2016\"\noutput: ioslides_presentation\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, cache = TRUE)\nlibrary(tidyverse)\n```\n<style>\npre {\n  overflow-x: auto;\n}\npre code {\n  word-wrap: normal;\n  white-space: pre;\n}\n</style>\n\n## Choropleth Maps\n\nA choropleth map is a  map in which areas are shaded relative to a measurement such as population density. They are widely used, and quite useful, but one must be careful because\n\n* regionally aggregated data can be misleading\n* the use of counts or sums to represent magnitude rather than normalized values such as rates leads the eye giving incorrect weights to larger regions\n\nBecause of this, dasymetric maps are increasing popular. Nonetheless, choropleths are quite useful and have a nice implementation in R in the `choroplethr` package.\n\n---\n\nHere's a very simple example, from the help file\n\n```{r, message = FALSE}\nlibrary(choroplethr)\ndata(df_president)\nstate_choropleth(df_president, \n                 title  = \"US 2012 Presidential Election State Results\", \n                 legend = \"State Winner\")\n```\n\n---\n\nThe only requirement is that the dataframe (`df_president` in this case) have two columns, `region` and `value`. The `region` value must exactly match the names of the states in the `state.map` dataframe (full lower case name).\n\n```{r}\nhead(df_president)\n```\n\n---\n\nThere are also `country_choropleth()`, `admin1_choropleth()` (states or provinces), and `county_choropleth()`. We'll work through an example using `county_choropleth()`.\n\n```{r}\ndata(df_county_demographics)\nhead(df_county_demographics, n = 2)\n```\n\n---\n\n```{r}\ndf_county_demographics %>% dplyr::rename(value = percent_asian) %>%\n  county_choropleth(title = \"Asian Percentage of Population\", num_colors = 1)\n# the num_colors = 1 option uses a continuous color palette\n```\n\n---\n\nThe color scheme in the map is so so, because there are a few counties with high proportions, leading the scale to be evenly distributed from 0 to 43, but almost all of the counties are in a very tight range.\n\n```{r}\nggplot(df_county_demographics, aes(percent_asian)) + geom_histogram(binwidth = 1)\nsummary(df_county_demographics$percent_asian)\n```\n\n---\n\nIn this situation, it can be helpful to use a fixed number of colors which forces the choropleth function to bin the values.\n\n```{r}\ndf_county_demographics %>% dplyr::rename(value = percent_asian) %>%\n  county_choropleth(title = \"Asian Percentage of Population\", num_colors = 9)\n```\n\n---\n\nLet's look at just NJ. Note the `state_zoom` option.\n\n```{r}\ndf_county_demographics %>% dplyr::rename(value = percent_asian) %>%\n  county_choropleth(title = \"Asian Percentage of Population\", \n                    num_colors = 9, state_zoom = \"new jersey\")\n```\n\n---\n\n```{r, eval = FALSE}\nlibrary(gridExtra)\ngrid.arrange(\n  df_county_demographics %>% dplyr::rename(value = percent_white) %>% county_choropleth(title = \"White Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  df_county_demographics %>% dplyr::rename(value = percent_black) %>% county_choropleth(title = \"African American Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  df_county_demographics %>% dplyr::rename(value = percent_asian) %>% county_choropleth(title = \"Asian Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  df_county_demographics %>% dplyr::rename(value = percent_hispanic) %>% county_choropleth(title = \"Hispanic Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  ncol=2, nrow=2\n)\n```\n---\n\n```{r, echo = FALSE}\nlibrary(gridExtra)\ngrid.arrange(\n  df_county_demographics %>% dplyr::rename(value = percent_white) %>% county_choropleth(title = \"White Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  df_county_demographics %>% dplyr::rename(value = percent_black) %>% county_choropleth(title = \"African American Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  df_county_demographics %>% dplyr::rename(value = percent_asian) %>% county_choropleth(title = \"Asian Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  df_county_demographics %>% dplyr::rename(value = percent_hispanic) %>% county_choropleth(title = \"Hispanic Percentage of Population\", num_colors = 9, state_zoom = \"new jersey\"), \n  ncol=2, nrow=2\n)\n```\n\n---\n\nIt's possible to get finer control, but it requires some custom coding.\n\n```{r}\nlibrary(viridis)\n\ntemp_demo <- df_county_demographics\ntemp_demo$value <- df_county_demographics$per_capita_incom\ncustom_choro <- CountyChoropleth$new(temp_demo)\ncustom_choro$title <- \"Per Capita Income By County\"\ncustom_choro$set_num_colors(1)\ncustom_choro$ggplot_polygon <- geom_polygon(aes(fill = value), color = NA)\ncustom_choro$ggplot_scale <- scale_fill_gradientn(name = \"Per Capita Income\", colours = viridis(32))\ncustom_choro$set_zoom(\"new jersey\")\n```\n\n---\n\n```{r}\ncustom_choro$render()\n```\n\n---\n\nNote that for county-level data, the values for region are codes, not names. The are [FIPS county codes](https://en.wikipedia.org/wiki/FIPS_county_code). The first two digits correspond to the state, and are in fact the [FIPS state codes](https://en.wikipedia.org/wiki/Federal_Information_Processing_Standard_state_code).\n\n\n```{r}\ntail(df_county_demographics)\n```\n\n---\n\n## In class exercise {.smaller}\n\n\n\n1. Download the SPSS file \"U.S. Religion Census Religious Congregations and Membership Study, 2010 (County File).SAV\" from the class dropbox folder and read it into your R session. (There is a codebook [available](http://www.thearda.com/Archive/Files/Codebooks/RCMSCY10_CB.asp).)\n\n2. The census contains information on adherents to 236 religious groups but also includes a few aggregate values. The county variable is called FIPS. Try making national and NJ choropleth maps of TOTRATE, the total rate of adherence (religious attendence per 1000 residents) and one of the aggregate rates:\n\n* Evangelical Protestant--Rates of adherence per 1,000 population (2010) (EVANRATE)\n* Black Protestant--Rates of adherence per 1,000 population (2010) (BPRTRATE)\n* Mainline Protestant--Rates of adherence per 1,000 population (2010) (MPRTRATE)\n* Catholic--Rates of adherence per 1,000 population (2010) (CATHRATE)\n* Orthodox--Rates of adherence per 1,000 population (2010) (ORTHRATE)\n* Other--Rates of adherence per 1,000 population (2010) (OTHRATE)\n\n\n\n\n",
    "created" : 1478501913946.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2069906510",
    "id" : "FA433EAE",
    "lastKnownWriteTime" : 1477536837,
    "last_content_update" : 1477536837,
    "path" : "~/Documents/MSDS 597 Data Wrangling n Husbandary /Week6/intro-to-choropleths.rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}